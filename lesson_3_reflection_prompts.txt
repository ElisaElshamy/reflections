When would you want to use a remote repository rather than keeping all your work local?

A respository is perfect when you want others to collaborate on a project.  This way they can access your code and even make enhancements to it!





Why might you want to always pull changes manually rather than having Git automatically stay up-to-date with your remote repository?

You want to manually pull changes so that you know when you're overwriting your code with updates.  If Git did this automatically, you would constantly loose changes you're working on.





Describe the differences between forks, clones, and branches. When would you use one instead of another?

A fork is a clone of another repository on GitHub that links to to original repository.  It makes contributing to another repository without changing it directly so much easier.  A clone is a clone of a repository that you want to work on directly.  A branch is like a label to a copy of the code that you can work on while keeping the original in track.  If you do apply the branches code, and it is buggy, it's a lot easier to know where that bug exists.





What is the benefit of having a copy of the last known state of the remote stored locally?

If there are multiple changes, you can use the last known state as a reference to help with merging.




How would you collaborate without using Git or GitHub? What would be easier, and what would be harder?

Without Git or GitHub collaboration on a project would mean saving a bunch of copies of an entire project on one's local machine.  This could definitely get disorganized very fast and it would be difficult to understand the history of the project.  The only thing I can see being easier is not having to understand Git/GitHub and it's commands but that doesn't really seem very rewarding.





When would you want to make changes in a separate branch rather than directly in master? What benefits does each approach have?

You'd want to make changes in a different branch when you're working on a project where you are collaborating with others and you want them to see your changes.  Or if you need your changes to be approved.  The benefits of having the changes in a seperate branch is that it keeps changes very organized and allows for teams to discuss those changes.  Updating directly in master could be great for a bugfix where those changes need to be made and applied asap.